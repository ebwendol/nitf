###########################################################
#  Archiver                                               #
###########################################################
ar_flags="-crs"
AR="ar"

case "${target}" in
    powerpc-apple-*)

        AC_MSG_RESULT(attempting to configure for the mac...)
	    AC_MSG_RESULT(selecting the gnu compiler...)
	    AC_MSG_RESULT(selecting the ar archiver...)
	    CC="gcc"
	    sys_cc_debug_flags="-g"
	    sys_cc_warn_flags="-Wall"
	    sys_cc_verb_flags="-v"
	    sys_cc_64_flags="-m64"
	    sys_cc_optz_med="-O1"
	    sys_cc_optz_fast="-O2"
	    sys_cc_optz_fastest="-O3"
      
	    def_cc_optz_flags="${sys_cc_optz_med}"
	    def_cc_thread_defs="-D_REENTRANT -D__POSIX"
	    def_link_thread_libs="-lpthread"

	    cc_defs="-D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE"
	    #AC_MSG_RESULT(setting up build for universal binaries...)

	    # if --with-sysroot is given, set -isysroot to cc_flags
	    # default sysroot is /usr/include on the mac
	    AC_ARG_WITH(sysroot,
	                [  --with-sysroot=PATH           Mac specific: compile with sysroot set to the given path],
	                applesr=${withval},
		        applesr="no")
            AC_MSG_RESULT(setting sysroot: $applesr)
	    if test "${applesr}" != "no" && test -n "${applesr}"
	    then
		cc_flags="-isysroot ${applesr}"
 	    else
	        cc_flags=""
	    fi

            cc_flags="${cc_flags} -arch ppc"

	    cc_optz_flags="${def_cc_optz_flags}"
        link_autolibs="-ldl -lm"

	    AR="ar"
	    dll_flags="${dll_flags} -fPIC -dynamiclib"
    ;;
esac
case "${target}" in
    i686-apple-*|i386-apple-*)

        AC_MSG_RESULT(attempting to configure for the mac...)
	    AC_MSG_RESULT(selecting the gnu compiler...)
	    AC_MSG_RESULT(selecting the ar archiver...)
	    CC="gcc"
	    sys_cc_debug_flags="-g"
	    sys_cc_warn_flags="-Wall"
	    sys_cc_verb_flags="-v"
	    sys_cc_64_flags="-m64"
	    sys_cc_optz_med="-O1"
	    sys_cc_optz_fast="-O2"
	    sys_cc_optz_fastest="-O3"
      
	    def_cc_optz_flags="${sys_cc_optz_med}"
	    def_cc_thread_defs="-D_REENTRANT -D__POSIX"
	    def_link_thread_libs="-lpthread"

	    cc_defs="-D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE"
	    #AC_MSG_RESULT(setting up build for universal binaries...)

	    # if --with-sysroot is given, set -isysroot to cc_flags
	    # default sysroot is /usr/include on the mac
	    AC_ARG_WITH(sysroot,
	                [  --with-sysroot=PATH           Mac specific: compile with sysroot set to the given path],
	                applesr=${withval},
		        applesr="no")
            AC_MSG_RESULT(setting sysroot: $applesr)
	    if test "${applesr}" != "no" && test -n "${applesr}"
	    then
		cc_flags="-isysroot ${applesr}"
 	    else
	        cc_flags=""
	    fi

            cc_flags="${cc_flags} -arch i386"

	    cc_optz_flags="${def_cc_optz_flags}"
        link_autolibs="-ldl -lm"

	    AR="ar"
	    dll_flags="${dll_flags} -fPIC -dynamiclib"
    ;;

esac
